<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="DELETE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_g_irm_fms_project</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Project Prevent Delete</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

    var allocCheck = new GlideAggregate(FMSConstants.TABLE_PROJECT_ALLOCATION);
    allocCheck.addQuery("project_ref", current.sys_id);
	allocCheck.addAggregate("COUNT");
    allocCheck.query();
	var cnt = 0;
    if (allocCheck.next()) { 
		cnt = allocCheck.getAggregate("COUNT");
	}
	if (cnt > 0) {
        gs.addErrorMessage("Unable to delete a project with existing project allocations.");
        current.setAbortAction(true);
    }
    var xferCheck = new GlideAggregate(FMSConstants.TABLE_PROJECT_ALLOCATION);
    xferCheck.addQuery("xfer_project_ref", current.sys_id);
	xferCheck.addAggregate("COUNT");
    xferCheck.query();
	cnt = 0;
    if (xferCheck.next()) { 
		cnt = xferCheck.getAggregate("COUNT");
	}
	if (cnt > 0) {
        gs.addErrorMessage("Unable to delete a project with existing project allocation transfers.");
        current.setAbortAction(true);
    }
    var budCheck = new GlideAggregate(FMSConstants.TABLE_BUDGET);
    budCheck.addQuery("project_ref", current.sys_id);
	budCheck.addAggregate("COUNT");
    budCheck.query();
	cnt = 0;
    if (budCheck.next()) { 
		cnt = budCheck.getAggregate("COUNT");
	}
	if (cnt > 0) {
        gs.addErrorMessage("Unable to delete a project with existing budgets.");
        current.setAbortAction(true);
    }
    var tranCheck = new GlideAggregate(FMSConstants.TABLE_FINANCIAL_TRANSACTION);
    tranCheck.addQuery("project_ref", current.sys_id);
	tranCheck.addAggregate("COUNT");
    tranCheck.query();
	cnt = 0;
    if (tranCheck.next()) { 
		cnt = tranCheck.getAggregate("COUNT");
	}
	if (cnt > 0) {
        gs.addErrorMessage("Unable to delete a project with existing financial transations.");
        current.setAbortAction(true);
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>MarkelJR@state.gov</sys_created_by>
        <sys_created_on>2020-08-31 15:43:47</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>60325ad01bcb54500a4a10ad9c4bcb03</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Project Prevent Delete</sys_name>
        <sys_overrides/>
        <sys_package display_value="FMS" source="x_g_irm_fms">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_package>
        <sys_policy/>
        <sys_scope display_value="FMS">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_scope>
        <sys_update_name>sys_script_60325ad01bcb54500a4a10ad9c4bcb03</sys_update_name>
        <sys_updated_by>MarkelJR@state.gov</sys_updated_by>
        <sys_updated_on>2020-08-31 15:45:46</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="DELETE" query="documentkey=60325ad01bcb54500a4a10ad9c4bcb03"/>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="FMS">c728dd331b3fc8100a4a10ad9c4bcbb6</application>
        <file_path/>
        <instance_id>d1e3ff52db934090334f461932961904</instance_id>
        <instance_name>bmpdev</instance_name>
        <name>sys_script_60325ad01bcb54500a4a10ad9c4bcb03</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;&lt;sys_script action="INSERT_OR_UPDATE"&gt;&lt;abort_action&gt;false&lt;/abort_action&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;action_delete&gt;true&lt;/action_delete&gt;&lt;action_insert&gt;false&lt;/action_insert&gt;&lt;action_query&gt;false&lt;/action_query&gt;&lt;action_update&gt;false&lt;/action_update&gt;&lt;active&gt;true&lt;/active&gt;&lt;add_message&gt;false&lt;/add_message&gt;&lt;advanced&gt;true&lt;/advanced&gt;&lt;change_fields&gt;false&lt;/change_fields&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;collection&gt;x_g_irm_fms_project&lt;/collection&gt;&lt;condition/&gt;&lt;description/&gt;&lt;execute_function&gt;false&lt;/execute_function&gt;&lt;filter_condition/&gt;&lt;is_rest&gt;false&lt;/is_rest&gt;&lt;message/&gt;&lt;name&gt;Project Prevent Delete&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;priority&gt;100&lt;/priority&gt;&lt;rest_method/&gt;&lt;rest_method_text/&gt;&lt;rest_service/&gt;&lt;rest_service_text/&gt;&lt;rest_variables/&gt;&lt;role_conditions/&gt;&lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {

    var allocCheck = new GlideAggregate(FMSConstants.TABLE_PROJECT_ALLOCATION);
    allocCheck.addQuery("project_ref", current.sys_id);
	allocCheck.addAggregate("COUNT");
    allocCheck.query();
	var cnt = 0;
    if (allocCheck.next()) { 
		cnt = allocCheck.getAggregate("COUNT");
	}
	if (cnt &gt; 0) {
        gs.addErrorMessage("Unable to delete a project with existing project allocations.");
        current.setAbortAction(true);
    }
    var xferCheck = new GlideAggregate(FMSConstants.TABLE_PROJECT_ALLOCATION);
    xferCheck.addQuery("xfer_project_ref", current.sys_id);
	xferCheck.addAggregate("COUNT");
    xferCheck.query();
	cnt = 0;
    if (xferCheck.next()) { 
		cnt = xferCheck.getAggregate("COUNT");
	}
	if (cnt &gt; 0) {
        gs.addErrorMessage("Unable to delete a project with existing project allocation transfers.");
        current.setAbortAction(true);
    }
    var budCheck = new GlideAggregate(FMSConstants.TABLE_BUDGET);
    budCheck.addQuery("project_ref", current.sys_id);
	budCheck.addAggregate("COUNT");
    budCheck.query();
	cnt = 0;
    if (budCheck.next()) { 
		cnt = budCheck.getAggregate("COUNT");
	}
	if (cnt &gt; 0) {
        gs.addErrorMessage("Unable to delete a project with existing budgets.");
        current.setAbortAction(true);
    }
    var tranCheck = new GlideAggregate(FMSConstants.TABLE_FINANCIAL_TRANSACTION);
    tranCheck.addQuery("project_ref", current.sys_id);
	tranCheck.addAggregate("COUNT");
    tranCheck.query();
	cnt = 0;
    if (tranCheck.next()) { 
		cnt = tranCheck.getAggregate("COUNT");
	}
	if (cnt &gt; 0) {
        gs.addErrorMessage("Unable to delete a project with existing financial transations.");
        current.setAbortAction(true);
    }

})(current, previous);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;MarkelJR@state.gov&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-08-31 15:43:47&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;60325ad01bcb54500a4a10ad9c4bcb03&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;Project Prevent Delete&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="FMS" source="x_g_irm_fms"&gt;c728dd331b3fc8100a4a10ad9c4bcbb6&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="FMS"&gt;c728dd331b3fc8100a4a10ad9c4bcbb6&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_60325ad01bcb54500a4a10ad9c4bcb03&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;MarkelJR@state.gov&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-08-31 15:45:46&lt;/sys_updated_on&gt;&lt;template/&gt;&lt;when&gt;before&lt;/when&gt;&lt;/sys_script&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=60325ad01bcb54500a4a10ad9c4bcb03"/&gt;&lt;/record_update&gt;</payload>
        <payload_hash>616254429</payload_hash>
        <record_name>Project Prevent Delete</record_name>
        <reverted_from/>
        <source>271bad7e1b3a10501f7e113d9c4bcb3b</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>MarkelJR@state.gov</sys_created_by>
        <sys_created_on>2020-08-31 15:45:46</sys_created_on>
        <sys_id>2394d2d41bcb54500a4a10ad9c4bcbed</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>17445321eb80000001</sys_recorded_at>
        <sys_updated_by>MarkelJR@state.gov</sys_updated_by>
        <sys_updated_on>2020-08-31 15:45:46</sys_updated_on>
        <type>Business Rule</type>
        <update_guid>6794d2d494cb5450db95f8e4cade92ec</update_guid>
        <update_guid_history>6794d2d494cb5450db95f8e4cade92ec:616254429,9a24d2d4aecb5450c781993cbe69c19b:1550748436</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>MarkelJR@state.gov</sys_created_by>
        <sys_created_on>2020-08-31 15:57:41</sys_created_on>
        <sys_db_object display_value="" name="sys_script">sys_script</sys_db_object>
        <sys_id>117e1a947c3743d49a8c0936021ba064</sys_id>
        <sys_metadata>60325ad01bcb54500a4a10ad9c4bcb03</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Project Prevent Delete</sys_name>
        <sys_package display_value="FMS" source="x_g_irm_fms">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_package>
        <sys_parent display_value="Project">fb58fa2d1b8490501f7e113d9c4bcb33</sys_parent>
        <sys_policy/>
        <sys_scope display_value="FMS">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_scope>
        <sys_scope_delete display_value="">1b928b235c054c56a2c71b72d4cf8e79</sys_scope_delete>
        <sys_update_name>sys_script_60325ad01bcb54500a4a10ad9c4bcb03</sys_update_name>
        <sys_update_version display_value="sys_script_60325ad01bcb54500a4a10ad9c4bcb03">2394d2d41bcb54500a4a10ad9c4bcbed</sys_update_version>
        <sys_updated_by>MarkelJR@state.gov</sys_updated_by>
        <sys_updated_on>2020-08-31 15:57:41</sys_updated_on>
    </sys_metadata_delete>
</record_update>
