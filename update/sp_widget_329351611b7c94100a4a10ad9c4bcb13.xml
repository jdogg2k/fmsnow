<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($rootScope, $location, $timeout) {
    /* widget controller */
    var c = this;
    c.userAuth = $rootScope.userAuth;

    c.gridStates = {
        items: true,
        phasing: false,
        allocations: "hide",
        transactions: "hide"
    }

    c.secureBudget = function() {
		c.actionStates = {
			notes: true,
			adjust: false,
			submit: false,
			approve: false,
			copy: false,
			current: false,
			changes: false
		}
        // =========== Secure budget ================
        if (!(c.userAuth.roles.isSysAdmin || c.userAuth.roles.isOrgAdmin || c.userAuth.roles.isAnalyst)) {
            c.actionStates.submit = "hide";
            c.actionStates.adjust = "hide";
            c.actionStates.changes = "hide";
            c.canUpdateNotes = false;
        }
        if (!(c.userAuth.roles.isSysAdmin || c.userAuth.roles.isOrgAdmin || c.userAuth.roles.isAnalyst) ||
            (c.data.selBudget.budget_type == "Execution" || c.data.selBudget.budget_type == "Actual")) {
            c.actionStates.copy = "hide";
            c.actionStates.current = "hide";
            c.actionStates.adjust = "hide";
            c.actionStates.changes = "hide";
        }
        if ((c.userAuth.roles.isSysAdmin || c.userAuth.roles.isOrgAdmin || c.userAuth.roles.isAnalyst) &&
            (c.data.selBudget.budget_type == "Baseline" && (c.data.selBudget.budget_status == "Working" || c.data.selBudget.budget_status == "Rejected")))
            c.actionStates.submit = false;
        else
            c.actionStates.submit = "hide";
        if (!(c.userAuth.roles.isSysAdmin || c.userAuth.roles.isOrgAdmin || c.userAuth.roles.isAnalyst || c.userAuth.roles.isApprove))
            c.actionStates.approve = "hide";
        if (!(c.userAuth.roles.isSysAdmin || c.userAuth.roles.isOrgAdmin || c.userAuth.roles.isAnalyst) && c.data.selBudget.current)
            c.actionStates.current = false;
        if (!(c.canLock || c.canUnlock))
            c.actionStates.changes = "hide";

        // The following are ABSOLUTES (business rules - NOT dependent on security)
        if (c.data.selBudget.budget_status != "Submitted")
            c.actionStates.approve = "hide";
        if (c.data.selBudget.budget_status == "Approved")
            c.actionStates.changes = "hide";
        if (c.data.selBudget.current || c.data.hasApproved)
            c.actionStates.current = "hide";
        if (c.data.selBudget.locked) {
            c.actionStates.adjust = "hide";
            if (c.data.selBudget.budget_type == "Actual") {
                c.actionStates.changes = "hide";
            }
        }
		if (c.data.selBudget.budget_type == "Actual") {
			c.gridStates.phasing = "hide";
			c.gridStates.allocations = true;
			c.gridStates.transactions = true;
		}
		if (c.data.selBudget.budget_type == "Execution") {
			c.gridStates.phasing = true;
			c.gridStates.allocations = true;
			c.gridStates.transactions = false;
		}
        // =========== end secure budget ================
    }

    c.canUpdateNotes = function() {
        if (c.data.selBudget.locked) return false;
        if (!(c.userAuth.roles.isSysAdmin || c.userAuth.roles.isOrgAdmin || c.userAuth.roles.isAnalyst)) return false;
        return true;
    }

    c.canLock = function() {
        if (c.data.selBudget.locked) return false;
        if (!(c.userAuth.roles.isSysAdmin || c.userAuth.roles.isOrgAdmin || c.userAuth.roles.isAnalyst) || c.data.selBudget.budget_type == "Actual") return false;
        return true;
    }

    c.canUnlock = function() {
        if (!c.data.selBudget.locked) return false;
        if (!(c.userAuth.roles.isSysAdmin || c.userAuth.roles.isOrgAdmin || c.userAuth.roles.isAnalyst)) return false;
        return true;
    }

    c.setActiveGrid = function(gridType) {
		c.gridStates[gridType] = true;
		$rootScope.$broadcast('BudgetDetailsGridChanged', {
			grid_type: gridType
		});
    }
	
    c.setActiveAction = function(actionType) {
        if (c.actionStates[actionType] == false) {
            c.actionStates[actionType] = true;
        }
    };

    c.showRelated = function(type) {
        c.server.get({
            mode: "getRelated",
            budget_id: c.data.selBudget.sys_id,
            project_id: c.data.selBudget.project_ref_rawval,
            budget_type: type,
            fy: c.data.selBudget.fy_rawval
        }).then(function(resp) {
			$location.url("/fms?id=budget_detail&budget_id=" + resp.data.selBudget.sys_id);
        });
    };

    c.updateNotes = function() {
        c.server.get({
            mode: "updateNotes",
            budget_id: c.data.selBudget.sys_id,
            budget_notes: c.data.selBudget.budget_notes
        }).then(function(resp) {
            c.data.selBudget = resp.data.selBudget;
        });
    };

    c.adjustBudget = function() {
        c.server.get({
            mode: "adjustBudget",
            budget_id: c.data.selBudget.sys_id,
            adjust_pct: (parseFloat(c.data.adjustPct) / 100) * (c.data.adjustDir == "-" ? -1 : 1)
        }).then(function(resp) {
            c.budgetChanged(resp.data.selBudget);
        });
    };

    c.submitBudget = function() {
        c.server.get({
            mode: "submitBudget",
            budget_id: c.data.selBudget.sys_id
        }).then(function(resp) {
            c.budgetChanged(resp.data.selBudget);
        });
    };
    c.approveBudget = function() {
        c.server.get({
            mode: "approveBudget",
            budget_id: c.data.selBudget.sys_id
        }).then(function(resp) {
            c.budgetChanged(resp.data.selBudget);
        });
    };
    c.rejectBudget = function() {
        c.server.get({
            mode: "rejectBudget",
            budget_id: c.data.selBudget.sys_id
        }).then(function(resp) {
            c.budgetChanged(resp.data.selBudget);
        });
    };
    c.newRevision = function() {
        c.server.get({
            mode: "newRevision",
            budget_id: c.data.selBudget.sys_id
        }).then(function(resp) {
            c.budgetChanged(resp.data.selBudget);
        });
    };
    c.newVersion = function() {
        c.server.get({
            mode: "newVersion",
            budget_id: c.data.selBudget.sys_id
        }).then(function(resp) {
            c.budgetChanged(resp.data.selBudget);
        });
    };
    c.newCopy = function(type, fy) {
        c.server.get({
            mode: "newCopy",
            budget_id: c.data.selBudget.sys_id,
            budget_fy: fy,
            budget_type: type
        }).then(function(resp) {
            c.budgetChanged(resp.data.selBudget);
        });
    };
    c.lockBudget = function() {
        c.server.get({
            mode: "lockBudget",
            budget_id: c.data.selBudget.sys_id
        }).then(function(resp) {
            c.budgetChanged(resp.data.selBudget);
        });
    };
    c.unlockBudget = function() {
        c.server.get({
            mode: "unlockBudget",
            budget_id: c.data.selBudget.sys_id
        }).then(function(resp) {
            c.budgetChanged(resp.data.selBudget);
        });
    };
    c.makeCurrent = function() {
        c.server.get({
            mode: "makeCurrent",
            budget_id: c.data.selBudget.sys_id
        }).then(function(resp) {
            c.budgetChanged(resp.data.selBudget);
        });
    };
	
	c.budgetChanged = function(bud) {
		c.data.selBudget = bud;
		$rootScope.$broadcast('BudgetChanged', {
			budget_id: bud.sys_id,
			proj_id: bud.project_ref,
			fy: bud.fy
		});
	};

	$rootScope.$on('BudgetChanged', function(event, args) {
        c.secureBudget();
		$timeout(function () { $('#actionTabs li:last a').click(); }, 50);
    });

    $rootScope.$on('ProjChanged', function(event, args) {
        c.server.get({
            mode: "setProj",
            proj_id: args.proj_id
        }).then(function(resp) {
            c.data.selProj = resp.data.selProj;
        });
    });

	if (!c.data.selBudget)  $location.url("/sp?id=404");
	c.secureBudget();

}]]></client_script>
        <controller_as>c</controller_as>
        <css>.full-grid {&#13;
	width: calc(100vw - 40px) !important;&#13;
	height: calc(100vh - 340px) !important;&#13;
	clear: both;&#13;
}&#13;
.rowFullWidth {&#13;
	margin-left: 0 !important;&#13;
	margin-right: 0 !important;&#13;
}&#13;
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>budget_detail</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>Budget Detail</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function($sp) {
    var FMSUtility = new x_g_irm_fms.FMSUtilities(); //helper utility for FMS queries
    var budgetUtil = new x_g_irm_fms.FMSBudgetUtils(); //helper utility for budget
    var session = gs.getSession();

    data.selectedProjID = $sp.getParameter("proj_id");
	if ($sp.getParameter('budget_id') && $sp.getParameter('budget_id').length > 0) {
		data.selectedBudgetID = $sp.getParameter("budget_id");
		session.putClientData('budget_id', data.selectedBudgetID);
	} else
		data.selectedBudgetID = session.getClientData("budget_id");

	var filter = "sys_id=" + data.selectedBudgetID;
    if (input) {
        if (input.mode == "setProj") {
            data.selectedProjID = input.proj_id;
        }
		if (input.budget_id) {
			data.selectedBudgetID = input.budget_id;
			filter = "sys_id=" + data.selectedBudgetID;
		}	
		if (input.mode == "getRelated") {
			data.selectedBudgetID = null;
			data.selBudget = budgetUtil.getRelatedBudget(input.project_id, input.budget_type, input.fy);
			if (data.selBudget == null) {
				data.selectedBudgetID = budgetUtil.createBudget(input.budget_id, input.project_id, input.budget_type, input.fy);
				if (data.selectedBudgetID) {
					gs.addInfoMessage("Budget successfully created and displayed.");
				}
				else
					gs.addErrorMessage("Budget creation failed.");
			}
			else
				data.selectedBudgetID = data.selBudget.sys_id;
			if (data.selectedBudgetID) filter = "sys_id=" + data.selectedBudgetID;
		}
		if (input.mode == "updateNotes") {
			if (budgetUtil.updateNotes(input.budget_id, input.budget_notes))
				gs.addInfoMessage("Notes updated.");
			else
				gs.addErrorMessage("Note update failed.");
		}
		if (input.mode == "adjustBudget") {
			if (budgetUtil.adjust(input.budget_id, input.adjust_pct))
				gs.addInfoMessage("Budget successfully adjusted.");
			else
				gs.addErrorMessage("Budget adjustment failed.");
		}
		if (input.mode == "submitBudget") {
			if (budgetUtil.submit(input.budget_id))
				gs.addInfoMessage("Budget successfully submitted.");
			else
				gs.addErrorMessage("Budget submission failed.");
		}
		if (input.mode == "approveBudget") {
			if (budgetUtil.approve(input.budget_id))
				gs.addInfoMessage("Budget successfully approved.");
			else
				gs.addErrorMessage("Budget approval failed.");
		}
		if (input.mode == "rejectBudget") {
			if (budgetUtil.reject(input.budget_id))
				gs.addInfoMessage("Budget successfully rejected.");
			else
				gs.addErrorMessage("Budget rejection failed.");
		}
		if (input.mode == "newRevision") {
			data.selectedBudgetID = budgetUtil.newRevision(input.budget_id);
			if (data.selectedBudgetID) {
				filter = "sys_id=" + data.selectedBudgetID;
				gs.addInfoMessage("Budget successfully created and displayed.");
			}
			else
				gs.addErrorMessage("Budget creation failed.");
		}
		if (input.mode == "newVersion") {
			data.selectedBudgetID = budgetUtil.newVersion(input.budget_id);
			if (data.selectedBudgetID) {
				filter = "sys_id=" + data.selectedBudgetID;
				gs.addInfoMessage("Budget successfully created and displayed.");
			}
			else
				gs.addErrorMessage("Budget creation failed.");
		}
		if (input.mode == "createExecution") {
			data.selectedBudgetID = budgetUtil.createExecution(input.budget_id);
			if (data.selectedBudgetID) 
				gs.addInfoMessage("Execution Budget successfully created.");
			else
				gs.addErrorMessage("Failed to create Exceuction budget.");
		}
		if (input.mode == "newCopy") {
			data.selectedBudgetID = budgetUtil.newCopy(input.budget_id, input.budget_fy, input.budget_type);
			if (data.selectedBudgetID) {
				filter = "sys_id=" + data.selectedBudgetID;
				gs.addInfoMessage("Budget successfully copied and displayed.");
			}
			else
				gs.addErrorMessage("Budget copy failed.");
		}
		if (input.mode == "lockBudget") {
			if (budgetUtil.lock(input.budget_id))
				gs.addInfoMessage("Budget successfully locked.");
			else
				gs.addErrorMessage("Budget lock failed.");
		}
		if (input.mode == "unlockBudget") {
			if (budgetUtil.unlock(input.budget_id))
				gs.addInfoMessage("Budget successfully unlocked.");
			else
				gs.addErrorMessage("Budget unlock failed.");
		}
		if (input.mode == "makeCurrent") {
			if (budgetUtil.makeCurrent(input.budget_id))
				gs.addInfoMessage("Budget successfully set as current.");
			else
				gs.addErrorMessage("Failed to set current budget.");
		}
    } else {
        data.fiscalYears = FMSUtility.getFiscalYears();
        data.selectedFY = FMSUtility.getCurrentFY();
    }

    data.selBudget = FMSUtility.getTableData(FMSConstants.TABLE_BUDGET, filter, true)[0]; //get all budget info
	if (data.selBudget) 
		data.hasApproved = budgetUtil.getRelatedBudget(data.selBudget.project_ref_rawval, data.selBudget.budget_type, data.selBudget.fy, true);
	else
		gs.addErrorMessage("Budget does not exist.");
	
})($sp);]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>MarkelJR@state.gov</sys_created_by>
        <sys_created_on>2020-05-15 11:52:52</sys_created_on>
        <sys_id>329351611b7c94100a4a10ad9c4bcb13</sys_id>
        <sys_mod_count>330</sys_mod_count>
        <sys_name>Budget Detail</sys_name>
        <sys_package display_value="FMS" source="x_g_irm_fms">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_package>
        <sys_policy/>
        <sys_scope display_value="FMS">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_scope>
        <sys_update_name>sp_widget_329351611b7c94100a4a10ad9c4bcb13</sys_update_name>
        <sys_updated_by>MarkelJR@state.gov</sys_updated_by>
        <sys_updated_on>2020-11-02 12:32:12</sys_updated_on>
        <template><![CDATA[<div style="width: 100%; height: 100%">
  <widget id="organization_selection" options='{"hide_widget": true, "hide_project": true}'></widget>
  <div class="container" style="padding: 0px;">
    <div class="rowFullWidth">
      <div class="form-group col-md-6">
        <div class="row">
          <div class="col-sm-2 text-right">
            Budget ID: 
          </div>
          <div class="col-sm-6">
            {{c.data.selBudget.number}}
            <span style="background-color: lightgreen; margin-left: 20px;" ng-show="c.data.selBudget.current">Current</span>
            <span style="background-color: lightsalmon; margin-left: 20px;" ng-show="c.data.selBudget.locked">Locked</span>
          </div>
        </div>
        <div class="row">
          <div class="col-sm-2 text-right">
            Project: 
          </div>
          <div class="col-sm-6">
            {{c.data.selBudget.project_ref}}
          </div>
        </div>
        <div class="row">
          <div class="col-sm-2 text-right">
            Budget Type:
          </div>
          <div class="col-sm-6">
            {{c.data.selBudget.budget_type}} {{c.data.selBudget.budget_version_revision}}
            <span style="padding-left: 20px;" ng-show="c.data.selBudget.budget_type == 'Execution' || c.data.selBudget.budget_type == 'Actual'">
              <a href="javascript:void(0)" ng-click="c.showRelated('Baseline');">Baseline</a>
            </span>
            <span style="padding-left: 20px;" ng-show="(c.data.selBudget.budget_type == 'Baseline' && c.data.selBudget.budget_status == 'Approved') || c.data.selBudget.budget_type == 'Actual'">
              <a href="javascript:void(0)" ng-click="c.showRelated('Execution');">Execution</a>
            </span>
            <span style="padding-left: 20px;" ng-show="(c.data.selBudget.budget_type == 'Baseline' && c.data.selBudget.budget_status == 'Approved') || c.data.selBudget.budget_type == 'Execution'">
              <a href="javascript:void(0)" ng-click="c.showRelated('Actual');">Actual</a>
            </span>
          </div>
        </div>
        <div class="row">
          <div class="col-sm-2 text-right">
            Budget FY:
          </div>
          <div class="col-sm-2">
            {{c.data.selBudget.fy}}
          </div>
          <div class="col-sm-2 text-right" ng-show="c.data.selBudget.budget_source_ref.length > 0">
            Created from: 
          </div>
          <div class="col-sm-6">
            <a href="/fms?id=budget_detail&budget_id={{c.data.selBudget.budget_source_ref_rawval}}">{{c.data.selBudget.budget_source_ref}}</a>
          </div>
        </div>
        <div class="row">
          <div class="col-sm-2 text-right">
            Budget Status: 
          </div>
          <div class="col-sm-4">
            {{c.data.selBudget.budget_status}} {{c.data.selBudget.approved_date}}
          </div>
        </div>
        <div class="row">
          <div class="col-sm-2 text-right">
            Description: 
          </div>
          <div class="col-sm-8">
            {{c.data.selBudget.budget_desc}}
          </div>
        </div>
      </div>
      <div class="form-group col-md-6">
        <div class="row" style="margin: 0px; padding: 0px;">
          <ul id="actionTabs" class="nav nav-tabs fms-tabs">
            <li><a data-toggle="tab" href="#adjust" ng-click="c.setActiveAction('adjust');" ng-if="c.actionStates.adjust!='hide'">Adjust</a></li>
            <li><a data-toggle="tab" href="#submit" ng-click="c.setActiveAction('submit');" ng-if="c.actionStates.submit!='hide'">Submit</a>
            <li><a data-toggle="tab" href="#approve" ng-click="c.setActiveAction('approve');" ng-if="c.actionStates.approve!='hide'">Approve</a></li>
            <li><a data-toggle="tab" href="#copy" ng-click="c.setActiveAction('copy');" ng-if="c.actionStates.copy!='hide'">New/Copy</a>
            <li><a data-toggle="tab" href="#changes" ng-click="c.setActiveAction('changes');" ng-if="c.actionStates.changes!='hide'">Changes</a></li>
            <li><a data-toggle="tab" href="#current" ng-click="c.setActiveAction('current');" ng-if="c.actionStates.current!='hide'">Current</a>
            <li class="active"><a data-toggle="tab" href="#notes" ng-click="c.setActiveAction('notes');">Notes</a>
          </ul>
        </div>
        <div class="row" style="margin: 0px; padding: 0px;">
          <div class="tab-content">
            <div id="adjust" class="tab-pane" ng-if="c.actionStates.adjust!='hide'">
              <div class="row">
                <div class="col-sm-2 text-right" style="padding: 0px;">
                    <label for="adjustDir">Adjust direction:</label>
                </div>
                <div class="col-sm-2">
                  <select class="form-control" id="adjustDir" style="width: 100px; padding: 0px;" ng-model="c.data.adjustDir">
                    <option value="+">Up</option>
                    <option value="-" selected>Down</option>
                  </select>
                </div>
                <div class="col-sm-2 text-right" style="padding: 0px;">
                  <label for="adjustPct">Adjust %:</label>
                </div>
                <div class="col-sm-2 text-right" style="padding: 0px;">
                  <input type="number" class="form-control" id="adjustPct" style="width: 100px;" ng-model="c.data.adjustPct">
                </div>
              </div>
              <div class="row" style="text-align: center; padding-top: 10px;">
                <div class="col-sm-6 text-right" style="padding: 0px;">
	                <a href="javascript:void(0)" ng-click="c.adjustBudget();" class="btn btn-info" title="Adjusting a budget affects all budget items and phasing amounts.">
    	              Adjust Budget</a>
                </div>
              </div>
            </div>
            <div id="submit" class="tab-pane" ng-if="c.actionStates.submit!='hide'">
                <a href="javascript:void(0)" ng-click="c.submitBudget();" class="btn btn-info" title="Submitting a baseline budget will lock it and prevent further changes.">
                  Submit Budget for Approval</a>
            </div>
            <div id="approve" class="tab-pane" ng-if="c.actionStates.approve!='hide'">
                <a href="javascript:void(0)" ng-click="c.approveBudget();" class="btn btn-info" title="Approving a baseline budget will make it the current version.">
                  Approve Budget</a>
                <a href="javascript:void(0)" ng-click="c.rejectBudget();" class="btn btn-info" title="Rejecting a baseline budget will unlock it to allow modifications.">
                  Reject Budget</a>
            </div>
            <div id="copy" class="tab-pane" ng-if="c.actionStates.copy!='hide'">
              <div class="col-sm-4">
                <div class="row" style="text-align: center;">
                  <a href="javascript:void(0)" ng-click="c.newRevision();" class="btn btn-info" title="A revision is a minor change to a budget involving adding or removing a few expense items.">
                    Create New Revision</a>
                </div>
                <div class="row" style="text-align: center; padding-top: 10px;">
                  <a href="javascript:void(0)" ng-click="c.newVersion();" class="btn btn-info" title="A new version is a significant change to a budget involving most or all expense items.">
                    Create New Version</a>
                </div>
              </div>
              <div class="col-sm-6">
                <div class="row">
                  <div class="col-sm-3 text-right" style="padding: 0px;">
                    <label for="newFY">Fiscal Year:</label>
                  </div>
                  <div class="col-sm-3">  
                    <select class="form-control" id="newFY" style="width: 100px;" ng-model="c.data.newFY">
                        <option ng-repeat="year in data.fiscalYears" value="{{year}}">{{year}}
                        </option>
                    </select>
                  </div>
                  <div class="col-sm-3 text-right" style="padding: 0px;">
                    <label for="newType">Budget Type:</label>
                  </div>
                  <div class="col-sm-3" style="padding: 0px;">  
                    <select class="form-control" id="newType" style="width: 100px;" ng-model="c.data.newType">
                        <option value="Baseline">Baseline</option>
                        <option value="Forecast">Forecast</option>
                        <option value="WhatIf">What If</option>
                    </select>
                  </div>
                </div>
                <div class="row" style="text-align: center; padding-top: 10px;">  
	              <a href="javascript:void(0)" ng-click="c.newCopy(c.data.newType, c.data.newFY);" class="btn btn-info" title="Create a new copy when the budget type or fiscal year changes.">
                    Create New Copy</a>
                </div>
              </div>
            </div>
            <div id="changes" class="tab-pane" ng-if="c.actionStates.changes!='hide'">
                <a href="javascript:void(0)" ng-click="c.lockBudget();" class="btn btn-info" ng-if="c.canLock()" title="Locking a budget will prevent further changes.">
                  Lock Budget</a>
                <a href="javascript:void(0)" ng-click="c.unlockBudget();" class="btn btn-info" ng-if="c.canUnlock()" title="Unlocking a budget will permit changes.">
                  Unlock Budget</a>
            </div>
            <div id="current" class="tab-pane" ng-if="c.actionStates.current!='hide'">
                <a href="javascript:void(0)" ng-click="c.makeCurrent();" class="btn btn-info" title="There is only one current budget for each Budget Type per Fiscal Year, per Project.">
                  Make Current</a>
            </div>
            <div id="notes" class="tab-pane active in" ng-if="c.actionStates.notes!='hide'">
              <textarea rows="3" class="form-control" style="display: inline; width: 500px; resize: none;" ng-model="c.data.selBudget.budget_notes">{{c.data.selBudget.budget_notes}}</textarea>
              <a href="javascript:void(0)" ng-click="c.updateNotes();" class="btn btn-info" ng-if="c.canUpdateNotes()" style="vertical-align: top;">Update Notes</a>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="row" style="padding: 0px; margin: 0px;">
      <div class="col-sm-12">        
        <ul class="nav nav-tabs fms-tabs">
          <li class="active"><a data-toggle="tab" href="#items" ng-click="c.setActiveGrid('items');">Budget Items</a>
          <li><a data-toggle="tab" href="#phasing" ng-click="c.setActiveGrid('phasing');" ng-if="c.gridStates.phasing!='hide'">Phasing</a></li>
          <li><a data-toggle="tab" href="#allocations" ng-click="c.setActiveGrid('allocations');" ng-if="c.gridStates.allocations!='hide'">Allocations</a></li>
          <li><a data-toggle="tab" href="#transactions" ng-click="c.setActiveGrid('transactions');" ng-if="c.gridStates.transactions!='hide'">Transactions</a></li>
        </ul>
      </div>
      
    <div class="rowFullWidth">
      <div class="tab-content">
        <div id="items" class="tab-pane fade in active">
          <widget id="budget_item_grid"></widget>
        </div>
        <div id="phasing" class="tab-pane fade" ng-if="c.gridStates.phasing!='hide'">
          <widget id="budget_item_phase_grid"></widget>
        </div>
        <div id="allocations" class="tab-pane fade" ng-if="!!c.gridStates.allocations">
          <widget id="project_allocation_grid"></widget>
        </div>
        <div id="transactions" class="tab-pane fade" ng-if="!!c.gridStates.transactions">
          <widget id="financial_transaction_grid"></widget>
        </div>
      </div>
  </div>  
</div>]]></template>
    </sp_widget>
</record_update>
