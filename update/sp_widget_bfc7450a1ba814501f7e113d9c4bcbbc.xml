<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function(AGGridFactory, $timeout) {
    /* widget controller */
    var c = this;
    c.targetOrg = c.data.selectedOrg;
    c.userAuth = $rootScope.userAuth;

    var costpoolManager = new AGGridFactory();

    c.addNew = function() {
        costpoolManager.editRow("-1", "organization_ref=" + c.targetOrg);
    }

	c.canAdd = function() { 
		if (c.userAuth.roles.isSysAdmin || c.userAuth.roles.isOrgAdmin) {
			if (c.userAuth.orgs.indexOf(c.targetOrg) >= 0) 
				return true;
			else
				return false;
		}
		else
			return false;
	}

	c.canEdit = function(auth, data) {
        if (auth.orgs.indexOf(data.organization_ref_rawval) >= 0)
            return true;
        else
            return false;
    }

    c.canDelete = function(auth, data) {
        return c.canEdit(auth, data);
    }

    c.exportExcel = function() {
        costpoolManager.exportExcel();
    }

    $rootScope.$on('OrgDetailsGridChanged', function(event, args) {
        if (args.grid_type == "costpool") {
            costpoolManager.fitColumns();
        }
    });

    var costPoolColumnDefs = [{
            field: 'edit',
            headerName: 'Edit',
            maxWidth: 50,
            cellStyle: {
                textAlign: 'center'
            },
            suppressMenu: true,
            sortable: false,
            cellRenderer: 'editCell',
            cellRendererParams: function(params) {
                return {
                    "show": c.canEdit(c.userAuth, params.data)
                };
            }
        },
        {
            field: 'cost_pool_name',
            headerName: 'Pool Name',
            filter: 'agTextColumnFilter',
            suppressMenu: true,
            sort: 'asc'
        },
        {
            field: 'cost_pool_desc',
            headerName: 'Description'
        },
        {
            field: 'disabled',
            headerName: 'Disabled',
            maxWidth: 80,
            cellStyle: {
                textAlign: 'center'
            },
            cellRenderer: function(params) {
                var input = document.createElement('input');
                input.type = "checkbox";
                input.checked = params.value == "true";
                return input;
            }
        },
        {
            field: 'delete',
            headerName: 'Delete',
            maxWidth: 50,
            cellStyle: {
                textAlign: 'center'
            },
            suppressMenu: true,
            sortable: false,
            cellRenderer: 'deleteCell',
            cellRendererParams: function(params) {
                return {
                    "show": c.canDelete(c.userAuth, params.data)
                };
            }
        }
    ];

    var costPoolProps = {
        pageController: c,
        tableName: c.data.tableName,
        dataArray: null,
        pageType: 'Cost Pool',
        linkedField: '',
        detailsPage: ''
    }

    costpoolManager.setColumns(costPoolColumnDefs);
    costpoolManager.setPageProperties(costPoolProps);
    costpoolManager.setRenderers('cost_pool_name'); //build renderers and set display field to show on delete attempt
    costpoolManager.renderGrid('costPoolGrid'); //render grid objects
    costpoolManager.setGridData(c.data.tableData); //set grid data
    costpoolManager.setColumnsVisible(['edit', 'delete'], (c.userAuth.roles.isSysAdmin || c.userAuth.roles.isOrgAdmin || c.userAuth.roles.isAnalyst));
    $timeout(function () { costpoolManager.fitColumns(); }, 250);

    $rootScope.$on('OrgChanged', function(event, args) {
        c.targetOrg = args.org_id;
        c.server.get({
            mode: "setOrg",
            org_id: args.org_id
        }).then(function(resp) {
            costpoolManager.setGridData(resp.data.tableData); //set grid data
        });
    });

}]]></client_script>
        <controller_as>c</controller_as>
        <css>.full-grid {
    width: 94vw;
    height: calc(100vh - 210px);
    clear: both;
}
.fms-list-header {
    margin-bottom: 0px !important;
}
.pageLabel {
    float: left;
    margin-right: 10px;
}
.row-button {
    cursor: pointer;
}
.new-button {
    float: left;
}
.excel-button {
    float: right;
}
.edit-pencil {
    color: #003ade;
    font-size: 13px;
}
.delete-x {
    color: #000000;
    font-size: 13px;
}
.updated-row {
    background-color: #FFFFCC;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>cost_pool_grid</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>Cost Pool Grid</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {

	data.selectedOrg = "";
    var FMSUtility = new x_g_irm_fms.FMSUtilities(); //helper utility for FMS queries

    var session = gs.getSession();
	if (session.getClientData('org_id') && session.getClientData('org_id').length > 0)
		data.selectedOrg = session.getClientData('org_id');

    if (input) { //input holds the data coming back to the server
        if (input.mode == "deleteRow") {
            FMSUtility.deleteRecord(FMSConstants.TABLE_COST_POOL, input.rowID);
        }
        if (input.mode == "setOrg") {
            data.selectedOrg = input.org_id.toString();
        }
    }

    data.tableData = FMSUtility.getTableData(FMSConstants.TABLE_COST_POOL, "organization_ref=" + data.selectedOrg, true); //get all expense item info

    data.tableName = FMSConstants.TABLE_COST_POOL;

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>MarkelJR@state.gov</sys_created_by>
        <sys_created_on>2020-05-04 14:04:25</sys_created_on>
        <sys_id>bfc7450a1ba814501f7e113d9c4bcbbc</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_name>Cost Pool Grid</sys_name>
        <sys_package display_value="FMS" source="x_g_irm_fms">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_package>
        <sys_policy/>
        <sys_scope display_value="FMS">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_scope>
        <sys_update_name>sp_widget_bfc7450a1ba814501f7e113d9c4bcbbc</sys_update_name>
        <sys_updated_by>MarkelJR@state.gov</sys_updated_by>
        <sys_updated_on>2020-05-18 19:59:52</sys_updated_on>
        <template><![CDATA[<div style="width: 100%; height: 100%">

  <div class="container">
    <div class="row">
      <div class="form-group col-sm-12 fms-list-header">
        <div class="fms-header-buttons">
          <a href="javascript:void(0)" ng-click="c.addNew();" ng-show="c.canAdd()" class="btn btn-info new-button">Add Cost Pool</a>
          <a href="javascript:void(0)" ng-click="c.exportExcel();" class="btn btn-primary excel-button">Export to Excel</a>
        </div>
      </div>
    </div>

    <div class="row">
      <div class="col-sm-12">

        <div id="costPoolGrid" class="ag-theme-balham full-grid"></div>

      </div>
    </div>
  </div>

</div>]]></template>
    </sp_widget>
</record_update>
