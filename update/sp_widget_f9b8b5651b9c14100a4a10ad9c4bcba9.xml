<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function ($scope,AGGridFactory) {
    /* widget controller */
    var c = this;
	c.userAuth = c.data.userAuth;

    var orgManager = new AGGridFactory();
	
	c.addNew = function() {
        orgManager.editRow("-1");
    }

	c.canAdd = function() { 
		if (c.userAuth.roles.isSysAdmin || c.userAuth.roles.isOrgAdmin) 
			return true;
		else
			return false;
	}

	c.canEdit = function(auth, data) {
		if (c.userAuth.roles.isSysAdmin || auth.orgs.indexOf(data.sys_id) >= 0) 
			return true;
		else
			return false;
	}

	c.canDelete = function(auth, data) { return c.canEdit(auth, data); }
    
    c.exportExcel = function() {
       orgManager.exportExcel();
	}

    orgManager.setColumns ([{
            field: 'edit',
            headerName: 'Edit',
            maxWidth: 50,
            cellStyle: {
                textAlign: 'center'
            }, 
			suppressMenu: true,
			sortable: false,
			cellRenderer: 'editCell',
			cellRendererParams: function(params) { 
				return { "show": c.canEdit(c.userAuth, params.data) }; 
			}
        },
        {
            field: 'org_code',
            headerName: 'Org. Code',
            cellStyle: {
                color: 'blue',
                'text-decoration': 'underline',
                'cursor': 'pointer'
            }
        },
        {
            field: 'org_type',
            headerName: 'Organization Type',
            filter: 'agTextColumnFilter',
            suppressMenu: true
        },
        {
            field: 'org_name',
            headerName: 'Organization Name',
            sort: 'asc',
            filter: 'agTextColumnFilter',
            suppressMenu: true
        },
        {
            field: 'org_desc',
            headerName: 'Description'
        },
        {
            field: 'organization_parent_ref',
            headerName: 'Parent Organization'
        },
        {
            field: 'delete',
            headerName: 'Del.',
            maxWidth: 50,
            cellStyle: {
                textAlign: 'center'
            },
			suppressMenu: true,
			sortable: false,
            cellRenderer: 'deleteCell',
			cellRendererParams: function(params) { 
				return { "show": c.canDelete(c.userAuth, params.data) }; 
			}
        }
    ]);

    var pageProps = {
        pageController: c, 
        tableName: c.data.tableName, 
        dataArray: null, 
        pageType: 'Organization', 
        linkedField: 'org_code', 
        detailsPage: 'organization_detail',
        usePaging: false
    }

    orgManager.setPageProperties(pageProps);
    orgManager.setRenderers('org_code'); //build renderers and set display field to show on delete attempt
    orgManager.renderGrid('orgGrid'); //render grid objects
    orgManager.setGridData(c.data.tableData); //set grid data
    orgManager.setColumnsVisible(['edit', 'delete'], (c.userAuth.roles.isSysAdmin || c.userAuth.roles.isOrgAdmin));
    orgManager.fitColumns();

}]]></client_script>
        <controller_as>c</controller_as>
        <css>.full-grid {
    width: 94vw;
    height: calc(100vh - 135px);
    clear: both;
}
.fms-list-header {
    margin-bottom: 0px !important;
}
.pageLabel {
    float: left;
    margin-right: 10px;
}
.row-button {
    cursor: pointer;
}
.new-button {
    float: left;
}
.excel-button {
    float: right;
}
.edit-pencil {
    color: #003ade;
    font-size: 13px;
}
.delete-x {
    color: #000000;
    font-size: 13px;
}
.updated-row {
    background-color: #FFFFCC;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>organization_grid</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>Organization Grid</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {

    var FMSUtility = new x_g_irm_fms.FMSUtilities(); //helper utility for FMS queries
    
    if (input) { //input holds the data coming back to the server

		if (input.mode == "deleteRow"){
			FMSUtility.deleteRecord(FMSConstants.TABLE_ORGANIZATION, input.rowID);
		}

	}
	
	data.userAuth = FMSUtility.getUserAuth();
	data.tableName = FMSConstants.TABLE_ORGANIZATION;
    data.tableData = FMSUtility.getTableData(FMSConstants.TABLE_ORGANIZATION, "", true); //get all org info

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>RoseJL@state.gov</sys_created_by>
        <sys_created_on>2020-04-20 18:03:37</sys_created_on>
        <sys_id>f9b8b5651b9c14100a4a10ad9c4bcba9</sys_id>
        <sys_mod_count>180</sys_mod_count>
        <sys_name>Organization Grid</sys_name>
        <sys_package display_value="FMS" source="x_g_irm_fms">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_package>
        <sys_policy/>
        <sys_scope display_value="FMS">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_scope>
        <sys_update_name>sp_widget_f9b8b5651b9c14100a4a10ad9c4bcba9</sys_update_name>
        <sys_updated_by>MarkelJR@state.gov</sys_updated_by>
        <sys_updated_on>2020-05-12 19:03:18</sys_updated_on>
        <template><![CDATA[<div style="width: 100%; height: 100%">

  <div class="container">
    <div class="row">
      <div class="form-group col-sm-12 fms-list-header">
        <a href="javascript:void(0)" ng-click="c.addNew();" ng-show="c.canAdd()" class="btn btn-info new-button">Add Organization</a>
        <a href="javascript:void(0)" ng-click="c.exportExcel();" class="btn btn-primary excel-button">Export to Excel</a>
      </div>
    </div>

    <div class="row">
      <div class="col-sm-12">


        <div id="orgGrid" class="ag-theme-balham full-grid"></div>


      </div>
    </div>
  </div>

</div>
]]></template>
    </sp_widget>
</record_update>
