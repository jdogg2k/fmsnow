<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, AGGridFactory, $rootScope, $timeout) {
    /* widget controller */
    var c = this;
    c.targetOrg = c.data.selectedOrg;
    c.userAuth = $rootScope.userAuth;

    var ombManager = new AGGridFactory();

    c.addNew = function() {
        ombManager.editRow("-1", "organization_ref=" + c.targetOrg, c.data.tableName);
    }

    c.canAdd = function() {
        if (c.userAuth.roles.isSysAdmin || c.userAuth.roles.isOrgAdmin || c.userAuth.roles.isAnalyst) {
            if (c.userAuth.orgs.indexOf(c.targetOrg) >= 0)
                return true;
            else
                return false;
        } else
            return false;
    }

    c.canEdit = function(auth, data) {
        if (auth.orgs.indexOf(data.organization_ref_rawval) >= 0)
            return true;
        else
            return false;
    }

    c.canDelete = function(auth, data) {
        return c.canEdit(auth, data);
    }

    c.exportExcel = function() {
        ombManager.exportExcel();
    }

    $rootScope.$on('OrgDetailsGridChanged', function(event, args) {
        if (args.grid_type == "omb") {
            ombManager.fitColumns();
        }
    });

    var ombColumnDefs = [{
            field: 'edit',
            headerName: 'Edit',
            maxWidth: 50,
            cellStyle: {
                textAlign: 'center'
            },
            suppressMenu: true,
            sortable: false,
            cellRenderer: 'editCell',
            cellRendererParams: function(params) {
                return {
                    "show": c.canEdit(c.userAuth, params.data)
                };
            }
        },
        {
            field: 'omb_category',
            headerName: 'OMB300 Category',
            filter: 'agTextColumnFilter',
            suppressMenu: true,
            sort: 'asc'
        },
				{
            field: 'disabled',
            headerName: 'Disabled',
            maxWidth: 80,
					  filter: 'agSetColumnFilter',
            filterParams: {
                values: [ true, false ]
            },
            cellStyle: {
                textAlign: 'center'
            },
               cellRenderer: function (params) {
                var input = document.createElement('input');
                input.type = "checkbox";
                input.checked = params.value;
                input.disabled = true;
                return input;
            }
        },																				 
												 
        {
            field: 'delete',
            headerName: 'Delete',
            maxWidth: 50,
            cellStyle: {
                textAlign: 'center'
            },
            suppressMenu: true,
            sortable: false,
            cellRenderer: 'deleteCell',
            cellRendererParams: function(params) {
                return {
                    "show": c.canDelete(c.userAuth, params.data)
                };
            }
        }
    ];

    var ombProps = {
        pageController: c,
        tableName: c.data.tableName,
        dataArray: null,
        pageType: 'OMB Category',
        linkedField: '',
        detailsPage: '',
    }

    ombManager.setColumns(ombColumnDefs);
    ombManager.setPageProperties(ombProps);
    ombManager.setRenderers('omb_category'); //build renderers and set display field to show on delete attempt
    ombManager.renderGrid('ombGrid'); //render grid objects
    ombManager.setGridData(c.data.tableData); //set grid data
    ombManager.setColumnsVisible(['edit', 'delete'], (c.userAuth.roles.isSysAdmin || c.userAuth.roles.isOrgAdmin || c.userAuth.roles.isAnalyst));
    $timeout(function () { ombManager.fitColumns(); }, 250);

    $rootScope.$on('OrgChanged', function(event, args) {
        c.targetOrg = args.org_id;
        c.server.get({
            mode: "setOrg",
            org_id: args.org_id
        }).then(function(resp) {
            var model = ombManager.gridOpts.api.getFilterModel();
            ombManager.setGridData(resp.data.tableData); //set grid data
            ombManager.gridOpts.api.setFilterModel(model);
        });
    });

}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>omb_category_grid</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>OMB Category Grid</name>
        <option_schema/>
        <public>false</public>
        <roles>x_g_irm_fms.all_users</roles>
        <script><![CDATA[(function() {

	data.selectedOrg = "";
    var FMSUtility = new x_g_irm_fms.FMSUtilities(); //helper utility for FMS queries
    var FMSPermissions = new x_g_irm_fms.FMSPermissions();
	
    var session = gs.getSession();
	if (session.getClientData('org_id') && session.getClientData('org_id').length > 0)
		data.selectedOrg = session.getClientData('org_id');

    if (input) { //input holds the data coming back to the server
        if (input.mode == "deleteRow"){
			if (FMSPermissions.canDeleteOMBCategory(input.rowID)) {
				FMSUtility.deleteRecord(FMSConstants.TABLE_OMB_CATEGORY, input.rowID);
			} else {
				data.isError = true;
				data.errorMsg = "This Category cannot be deleted as it is linked to existing transactions";
			}
		}
        
        if (input.mode == "setOrg") {
            data.selectedOrg = input.org_id.toString();
        }
    }

    data.tableData = FMSUtility.getTableData(FMSConstants.TABLE_OMB_CATEGORY, "organization_ref=" + data.selectedOrg, true); //get all expense item info

    data.tableName = FMSConstants.TABLE_OMB_CATEGORY;

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>MarkelJR@state.gov</sys_created_by>
        <sys_created_on>2020-05-04 14:22:50</sys_created_on>
        <sys_id>d4aa090e1ba814501f7e113d9c4bcbb9</sys_id>
        <sys_mod_count>26</sys_mod_count>
        <sys_name>OMB Category Grid</sys_name>
        <sys_package display_value="FMS" source="x_g_irm_fms">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_package>
        <sys_policy/>
        <sys_scope display_value="FMS">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_scope>
        <sys_update_name>sp_widget_d4aa090e1ba814501f7e113d9c4bcbb9</sys_update_name>
        <sys_updated_by>PuriA@state.gov</sys_updated_by>
        <sys_updated_on>2022-07-01 17:11:19</sys_updated_on>
        <template><![CDATA[<div style="width: 100%; height: 100%">

  <div class="container">
    <div class="row">
      <div class="form-group col-sm-12 fms-list-header">
        <div class="fms-header-buttons">
          <a href="javascript:void(0)" ng-click="c.exportExcel();" class="btn btn-primary excel-button">Export to Excel</a>
          <a href="javascript:void(0)" ng-click="c.addNew();" ng-show="c.canAdd()" class="btn btn-info new-button">Add OMB Category</a>
        </div>
      </div>
    </div>

    <div class="row">
      <div class="col-sm-12">

        <div id="ombGrid" class="ag-theme-balham full-grid"></div>

      </div>
    </div>
  </div>

</div>]]></template>
    </sp_widget>
</record_update>
