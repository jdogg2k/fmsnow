<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_g_irm_fms_contract</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Contract Unique  Validation</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    //check for unique PIID
    if (current.operation() == 'insert') {
        var newID = current.contract_piid;
        var uniqueCheck = new GlideRecord(FMSConstants.TABLE_CONTRACT);
        uniqueCheck.addQuery("contract_piid", newID);
        uniqueCheck.query();
        if (uniqueCheck.next()) { //we have existing records with that ID, notify and cancel update
            gs.addErrorMessage("Contract PIID " + newID + " is not unique. That value already exists on an existing contract.  Update Failed.");
            current.setAbortAction(true);
        }
    }
    if (current.operation() == 'update') {
        var newID = current.contract_piid;
        var uniqueCheck = new GlideRecord(FMSConstants.TABLE_CONTRACT);
        uniqueCheck.addQuery('sys_id', '!=', current.sys_id);
        uniqueCheck.addQuery("contract_piid", newID);
        uniqueCheck.query();
        if (uniqueCheck.next()) { //we have existing records with that ID, notify and cancel update
            gs.addErrorMessage("Contract PIID " + newID + " is not unique. That value already exists on an existing contract.  Update Failed.");
            current.setAbortAction(true);
        }
    }


})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>PuriA@state.gov</sys_created_by>
        <sys_created_on>2020-06-24 15:24:38</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>aea3002e1b29d4100a4a10ad9c4bcb43</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>Contract Unique  Validation</sys_name>
        <sys_overrides/>
        <sys_package display_value="FMS" source="x_g_irm_fms">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_package>
        <sys_policy/>
        <sys_scope display_value="FMS">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_scope>
        <sys_update_name>sys_script_aea3002e1b29d4100a4a10ad9c4bcb43</sys_update_name>
        <sys_updated_by>RoseJL@state.gov</sys_updated_by>
        <sys_updated_on>2020-10-20 14:21:52</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=aea3002e1b29d4100a4a10ad9c4bcb43"/>
</record_update>
