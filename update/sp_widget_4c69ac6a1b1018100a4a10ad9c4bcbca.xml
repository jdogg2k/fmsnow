<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function(AGGridFactory, glideUserSession) {
    /* widget controller */
    var c = this;
    c.targetOrg = "";
	  c.isAdmin = false;

    var expenseManager = new AGGridFactory();

    c.addNew = function() {
        expenseManager.editRow("-1", "organization_ref=" + c.targetOrg);
    }
	
	glideUserSession.loadCurrentUser().then(function(currentUser) {
		isAdmin = currentUser.hasRole('x_g_irm_fms.sysadmin');
	})

    //define AG Grid columns
    expenseManager.setColumns([{
            field: 'edit',
            headerName: 'Edit',
            maxWidth: 50,
            cellStyle: {
                textAlign: 'center'
            },
            cellRenderer: 'editCell',
						hide: !c.isAdmin
        },
        {
            field: 'budget_code_ref',
            headerName: 'Budget Code',
            filter: 'agTextColumnFilter',
            sort: 'asc',
            suppressMenu: true
        },
        {
            field: 'activity_code',
            headerName: 'Activity Code',
            filter: 'agTextColumnFilter',
            sort: 'asc',
            suppressMenu: true
        },

        {
            field: 'parent_expense_item_ref',
            headerName: 'Parent Item'
        },
        {
            field: 'disabled',
            headerName: 'Disabled',
            maxWidth: 80,
            cellStyle: {
                textAlign: 'center'
            },
            cellRenderer: function(params) {
                var input = document.createElement('input');
                input.type = "checkbox";
                input.checked = params.value == "true";
                return input;
            }
        },
        {
            field: 'delete',
            headerName: 'Delete',
            maxWidth: 80,
            cellStyle: {
                textAlign: 'center'
            },
            cellRenderer: 'deleteCell'
        }
    ]);

    var pageProps = {
        pageController: c,
        tableName: c.data.tableName,
        dataArray: null,
        pageType: 'Expense Item',
        linkedField: 'activity_code',
        detailsPage: 'expense_item_detail',
        usePaging: true
    }

    expenseManager.setPageProperties(pageProps);
    expenseManager.setRenderers('activity_code'); //build renderers and set display field to show on delete attempt
    expenseManager.renderGrid('expenseGrid'); //render grid objects

    $rootScope.$on('OrgChanged', function(event, args) {
        c.server.get({
            org_id: args.org_id
        }).then(function(resp) {
            c.targetOrg = resp.data.selectedOrg;
            expenseManager.setGridData(resp.data.tableData); //set grid data
        });
    });

}]]></client_script>
        <controller_as>c</controller_as>
        <css>.full-grid {&#13;
    width: 94vw;&#13;
    height: calc(100vh - 210px);&#13;
    clear: both;&#13;
}&#13;
.fms-list-header {&#13;
    margin-bottom: 0px !important;&#13;
}&#13;
.pageLabel {&#13;
    float: left;&#13;
    margin-right: 10px;&#13;
}&#13;
.row-button {&#13;
    cursor: pointer;&#13;
}&#13;
.new-button {&#13;
    float: left;&#13;
}&#13;
.edit-pencil {&#13;
    color: #003ade;&#13;
    font-size: 13px;&#13;
}&#13;
.delete-x {&#13;
    color: #000000;&#13;
    font-size: 13px;&#13;
}&#13;
.updated-row {&#13;
    background-color: #FFFFCC;&#13;
}&#13;
.ag-header-cell-label .ag-header-icon.ag-sort-order {&#13;
    display: none&#13;
  }</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>expense_item_grid</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>Expense Item Grid</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {

    var FMSUtility = new x_g_irm_fms.FMSUtilities(); //helper utility for FMS queries

    var session = gs.getSession();

    if (input) { //input holds the data coming back to the server
        if (input.mode == "deleteRow") {
            FMSUtility.deleteRecord(FMSConstants.TABLE_EXPENSE_ITEM, input.rowID);
        }
        if (input.org_id) {
            session.putClientData('org_id', input.org_id.toString());
        }
    }

    data.selectedOrg = session.getClientData('org_id');
    data.tableData = FMSUtility.getTableData(FMSConstants.TABLE_EXPENSE_ITEM, "organization_ref=" + data.selectedOrg, true); //get all expense item info

    data.tableName = FMSConstants.TABLE_EXPENSE_ITEM;

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>RoseJL@state.gov</sys_created_by>
        <sys_created_on>2020-04-23 14:50:54</sys_created_on>
        <sys_id>4c69ac6a1b1018100a4a10ad9c4bcbca</sys_id>
        <sys_mod_count>101</sys_mod_count>
        <sys_name>Expense Item Grid</sys_name>
        <sys_package display_value="FMS" source="x_g_irm_fms">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_package>
        <sys_policy/>
        <sys_scope display_value="FMS">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_scope>
        <sys_update_name>sp_widget_4c69ac6a1b1018100a4a10ad9c4bcbca</sys_update_name>
        <sys_updated_by>MarkelJR@state.gov</sys_updated_by>
        <sys_updated_on>2020-05-04 19:21:08</sys_updated_on>
        <template><![CDATA[<div style="width: 100%; height: 100%">

  <div class="container">
    <div class="row">
      <div class="form-group col-sm-12 fms-list-header">
        <a href="javascript:void(0)" ng-click="c.addNew();" class="btn btn-info new-button">Add Expense Item</a>
      </div>
    </div>

    <div class="row">
      <div class="col-sm-12">
        <div id="expenseGrid" class="ag-theme-balham full-grid"></div>
      </div>
    </div>
  </div>

</div>
]]></template>
    </sp_widget>
</record_update>
