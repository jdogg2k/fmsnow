<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_g_irm_fms_organization</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Organization Validation</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
	
    var newID = current.org_code;               // Validation for Unique Organization Code.
    var uniqueCheck = new GlideRecord(FMSConstants.TABLE_ORGANIZATION);
	
    uniqueCheck.addQuery("org_code", newID);
    uniqueCheck.query();
	
    if (uniqueCheck.next()) { //we have existing records with that ID, notify and cancel update
        gs.addErrorMessage("Organization Code " + newID + " is not unique. That value already exists on an existing Organization .  Update Failed.");
        current.setAbortAction(true);
    }
	
    if (!current.organization_parent_ref.nil()) {
        var hier = new OrgHierarchy();
        var children = hier.getOrgChildren(current.sys_id);
        if (children.indexOf(current.organization_parent_ref.toString()) >= 0) {
            gs.addErrorMessage('Org specified cannot be both a parent and a child/descendent.');
            current.organization_parent_ref = null;
            current.state = previous.state;
            current.setAbortAction(true);
        }
    }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>MarkelJR@state.gov</sys_created_by>
        <sys_created_on>2020-04-15 18:52:38</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3e935cc81b9810101f7e113d9c4bcb57</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>Organization Validation</sys_name>
        <sys_overrides/>
        <sys_package display_value="FMS" source="x_g_irm_fms">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_package>
        <sys_policy/>
        <sys_scope display_value="FMS">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_scope>
        <sys_update_name>sys_script_3e935cc81b9810101f7e113d9c4bcb57</sys_update_name>
        <sys_updated_by>PuriA@state.gov</sys_updated_by>
        <sys_updated_on>2020-06-19 16:33:58</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=3e935cc81b9810101f7e113d9c4bcb57"/>
</record_update>
