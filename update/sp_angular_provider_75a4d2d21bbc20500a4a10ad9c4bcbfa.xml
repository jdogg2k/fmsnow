<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_angular_provider">
    <sp_angular_provider action="INSERT_OR_UPDATE">
        <name>multiselectPopup</name>
        <script><![CDATA[function ($document) {
    return {
      restrict: 'E',
      scope: false,
      replace: true,
      template: 
        '<div class="dropdown">' +
        '<button class="btn" ng-click="toggleSelect()" ng-disabled="disabled" ng-class="{\'error\': !valid()}">' +
          '<span class="pull-left">{{header}}</span>' +
          '<span class="caret pull-right"></span>' +
        '</button>' +
        '<ul class="dropdown-menu">' +
          '<li>' +
            '<input class="input-block-level" type="text" ng-model="searchText.label" autofocus="autofocus" placeholder="Filter" />' +
          '</li>' +
          '<li ng-show="multiple">' +
            '<button class="btn-link btn-small" ng-click="checkAll()"><i class="icon-ok"></i> Check all</button>' +
            '<button class="btn-link btn-small" ng-click="uncheckAll()"><i class="icon-remove"></i> Uncheck all</button>' +
          '</li>' +
          '<li ng-repeat="i in items | filter:searchText">' +
            '<a ng-click="select(i); focus()">' +
              '<i ng-class="{\'icon-ok\': i.checked, \'icon-empty\': !i.checked}"></i>{{i.label}}</a>' +
          '</li>' +
        '</ul>' +
      '</div>',
      link: function (scope, element, attrs) {

        scope.isVisible = false;

        scope.toggleSelect = function () {
          if (element.hasClass('open')) {
            element.removeClass('open');
            $document.unbind('click', clickHandler);
          } else {
            element.addClass('open');
            scope.focus();
            $document.bind('click', clickHandler);
          }
        };

        function clickHandler(event) {
          if (elementMatchesAnyInArray(event.target, element.find(event.target.tagName)))
            return;
          element.removeClass('open');
          $document.unbind('click', clickHandler);
          scope.$digest();
        }
        
        scope.focus = function focus(){
          var searchBox = element.find('input')[0];
          searchBox.focus(); 
        }

        var elementMatchesAnyInArray = function (element, elementArray) {
          for (var i = 0; i < elementArray.length; i++)
            if (element == elementArray[i])
              return true;
          return false;
        }
      }
    }
  }]]></script>
        <sys_class_name>sp_angular_provider</sys_class_name>
        <sys_created_by>RoseJL@state.gov</sys_created_by>
        <sys_created_on>2020-12-02 20:43:40</sys_created_on>
        <sys_id>75a4d2d21bbc20500a4a10ad9c4bcbfa</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>multiselectPopup</sys_name>
        <sys_package display_value="FMS" source="x_g_irm_fms">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_package>
        <sys_policy/>
        <sys_scope display_value="FMS">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_scope>
        <sys_update_name>sp_angular_provider_75a4d2d21bbc20500a4a10ad9c4bcbfa</sys_update_name>
        <sys_updated_by>RoseJL@state.gov</sys_updated_by>
        <sys_updated_on>2020-12-02 20:52:21</sys_updated_on>
        <type>directive</type>
    </sp_angular_provider>
</record_update>
