<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_g_irm_fms_allocation_pool</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Allocation Pool Validation</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    if (current.pool_status.toUpperCase() == "PLANNED" && current.request_date.nil()) {
        gs.addErrorMessage("Requested Date is required when status is: 'Planned'.");
        current.setAbortAction(true);
    }
    if (current.pool_status.toUpperCase() == "PLANNED" && current.request_amt.nil()) {
        gs.addErrorMessage("Requested Amount is required when status is: 'Planned'.");
        current.setAbortAction(true);
    }
    if (current.pool_status.toUpperCase() == "PLANNED" && !current.request_amt.nil() && current.request_amt == 0) {
        gs.addErrorMessage("Requested Amount cannot be zero.");
        current.setAbortAction(true);
    }
    if (current.pool_status.toUpperCase() == "PLANNED" && !current.receive_amt.nil()) {
        gs.addErrorMessage("Received Amount is invalid when status is: 'Planned'.");
        current.setAbortAction(true);
    }
    if (current.pool_status.toUpperCase() == "PLANNED" && !current.receive_date.nil()) {
        gs.addErrorMessage("Received Date is invalid when status is: 'Planned'.");
        current.setAbortAction(true);
    }
    if (current.pool_status.toUpperCase() == "RECEIVED" && current.receive_date.nil()) {
        gs.addErrorMessage("Received Date is required when status is: 'Received'.");
        current.setAbortAction(true);
    }
    if (current.pool_status.toUpperCase() == "RECEIVED" && current.receive_amt.nil()) {
        gs.addErrorMessage("Received Amount is required when status is: 'Received'.");
        current.setAbortAction(true);
    }
    if (current.pool_status.toUpperCase() == "RECEIVED" && !current.receive_amt.nil() && current.receive_amt == 0) {
        gs.addErrorMessage("Received Amount cannot be zero.");
        current.setAbortAction(true);
    }
    if (!current.pool_status.toUpperCase() == "RECEIVED" && !current.pool_parent_ref.nil()) {
        gs.addErrorMessage("Pools must be 'Received' to be distributed.");
        current.setAbortAction(true);
    }
    if (current.fy_qtr.nil() && !current.receive_date.nil()) {
        current.fy_qtr = (Math.floor((new GlideDate(current.receive_date).getMonth() - 1) / 3) + 1);
        current.setAbortAction(true);
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>MarkelJR@state.gov</sys_created_by>
        <sys_created_on>2020-04-14 16:26:50</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>8588aaeb1b0014101f7e113d9c4bcbaf</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>Allocation Pool Validation</sys_name>
        <sys_overrides/>
        <sys_package display_value="FMS" source="x_g_irm_fms">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_package>
        <sys_policy/>
        <sys_scope display_value="FMS">c728dd331b3fc8100a4a10ad9c4bcbb6</sys_scope>
        <sys_update_name>sys_script_8588aaeb1b0014101f7e113d9c4bcbaf</sys_update_name>
        <sys_updated_by>RoseJL@state.gov</sys_updated_by>
        <sys_updated_on>2020-05-29 20:18:12</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=8588aaeb1b0014101f7e113d9c4bcbaf"/>
</record_update>
